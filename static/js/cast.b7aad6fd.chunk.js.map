{"version":3,"sources":["views/Cast/Cast.js","views/Cast/Cast.module.css"],"names":["Cast","movieId","useParams","useState","actors","setActors","error","setError","Status","IDLE","status","setStatus","useEffect","moviesApi","getCastInfo","then","cast","RESOLVED","catch","console","log","REJECTED","PENDING","Loader","className","s","map","actor","item","src","profile_path","baseImageURL","noImageFound","alt","original_name","photo","name","character","id","module","exports"],"mappings":"2RAWe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA4BE,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAASK,IAAOC,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KAgBA,OAdAC,qBAAU,WACRC,IACGC,YAAYb,GACZc,MAAK,SAAAC,GACJX,EAAUW,GACVL,EAAUH,IAAOS,aAElBC,OAAM,SAAAZ,GACLa,QAAQC,IAAId,GACZC,EAASD,GACTK,EAAUH,IAAOa,eAEpB,CAACpB,EAASK,IAGX,qCACGI,IAAWF,IAAOc,SAAW,cAACC,EAAA,EAAD,IAE7Bb,IAAWF,IAAOa,UAAY,cAAC,UAAD,IAE9BX,IAAWF,IAAOS,UACjB,oBAAIO,UAAWC,IAAET,KAAjB,SACGZ,EAAOsB,KAAI,SAAAC,GAAK,OACf,qBAAmBH,UAAWC,IAAEG,KAAhC,UACE,qBACEC,IACEF,EAAMG,aAAN,UACOC,KADP,OACsBJ,EAAMG,cACxBE,IAENC,IAAKN,EAAMO,cACXV,UAAWC,IAAEU,QAEf,oBAAIX,UAAWC,IAAEW,KAAjB,SAAwBT,EAAMO,gBAC9B,mBAAGV,UAAWC,IAAEY,UAAhB,SAA4BV,EAAMU,cAX3BV,EAAMW,c,mBCvC3BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY","file":"static/js/cast.b7aad6fd.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport moviesApi from '../../services/moviesApi';\nimport ErrorView from '../NotFoundView';\nimport Loader from '../../components/Loader';\nimport noImageFound from '../../images/not_found.gif';\nimport Status from '../../services/status';\nimport baseImageURL from '../../services/baseImageURL';\nimport s from './Cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    moviesApi\n      .getCastInfo(movieId)\n      .then(cast => {\n        setActors(cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.REJECTED && <ErrorView />}\n\n      {status === Status.RESOLVED && (\n        <ul className={s.cast}>\n          {actors.map(actor => (\n            <li key={actor.id} className={s.item}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `${baseImageURL}${actor.profile_path}`\n                    : noImageFound\n                }\n                alt={actor.original_name}\n                className={s.photo}\n              />\n              <h4 className={s.name}>{actor.original_name}</h4>\n              <p className={s.character}>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"Cast_cast__xKiao\",\"item\":\"Cast_item__1EdKZ\",\"photo\":\"Cast_photo__1QHtL\",\"name\":\"Cast_name__zay72\",\"character\":\"Cast_character__2oMrK\"};"],"sourceRoot":""}